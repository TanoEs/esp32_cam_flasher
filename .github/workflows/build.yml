name: Build ESP32 Flasher Executables

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3.5.3

      - name: Set up Python
        uses: actions/setup-python@v4.7.1
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Build executable (Linux/macOS)
        if: runner.os != 'Windows'
        run: |
          pyinstaller --onefile --add-data "$(python3 -c 'import esptool, os; print(os.path.join(os.path.dirname(esptool.__file__), "targets") + ":esptool/targets")')" flash_esp32.py

      - name: Build executable (Windows)
        if: runner.os == 'Windows'
        run: pyinstaller --onefile --add-data "$(python -c "import esptool, os; print(os.path.join(os.path.dirname(esptool.__file__), 'targets') + ';esptool/targets')")" flash_esp32.py

      - name: Upload executable
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-flasher
          path: dist/flash_esp32*
          if-no-files-found: error
          retention-days: 7
